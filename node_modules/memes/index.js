var request = require('request');
var cheerio = require('cheerio');
var Async = require('async');

/* Основа парсера мема */
var meme = function () {
	var self = this;

	request('http://1001mem.ru/new', function (err, res, body) {
		if (!err) {
			$ = cheerio.load(body);
			var allMemes = $('.posts article');
			var count = allMemes.length;

			self.perPage = count;
		} else {
			throw (err);
		}
	});
};

meme.prototype.loadMemes = function (lastCount, count, onGot, iteration) {
	var self = this;

	if (!iteration)
		iteration = 0;

	if (iteration >= 5) {
		throw ('Мемчики недоступны');
	}

	var startPage = Math.round(lastCount / self.perPage) + 1;
	var endPage = Math.round((lastCount + count) / self.perPage) + 1;

	console.log(startPage + ' from we start', endPage + ' where we go', count + lastCount + ' how long should we take');

	var result = [];
	var page = startPage;
	var tempCount = count;

	console.log('Count: ' + count, ' result.length = ' + result.length);

	Async.whilst(
		function () {
			return result.length < count;
		},
		function (callback) {
			self.getAllFromPage(page, function ($rows, err) {
				if (!err) {
					var count = $rows.length;
					var sliceFrom = page * self.perPage - count;
					var sliceTo = count;

					tempCount -= count;

					if (tempCount < count) {
						sliceTo = count - tempCount;
					}

					$rows.slice(sliceFrom, sliceTo).each(function () {
						result.push($('img', this).attr('src'));
					});

					++page;

					callback();

					console.log('Getting all from page #' + page + ' sliceFrom ' + sliceFrom + ' to ' + sliceTo);
				} else {
					console.log('Ошибка загрузки страницы ' + page);
				}
			});
		},
		function (err) {
			console.log('Цикл выполнен!');
		}
	);

	console.log('Count: ' + count, ' result.length = ' + result.length);

	onGot(result);
}

meme.prototype.getAllFromPage = function (page, callback) {
	request('http://1001mem.ru/new/' + page, function (err, res, body) {
		if (!err) {
			$ = cheerio.load(body);
			var allMemes = $('.posts article');

			callback(allMemes);
		} else {
			callback(null, err);
		}
	});
}

/* Экспортируем модуль */
module.exports = new meme();